final_merged_data['2013'] = pd.to_numeric(final_merged_data['2013'], errors='coerce')
final_merged_data['Equivalent household income <$600/week, %'] = pd.to_numeric(final_merged_data['Equivalent household income <$600/week, %'], errors='coerce')
final_merged_data['Holds degree or higher, %'] = pd.to_numeric(final_merged_data['Holds degree or higher, %'], errors='coerce')

plt.figure(figsize=(15, 5))

# Boxplot for '2013' House Prices
plt.subplot(1, 3, 1)
sns.boxplot(y='2013', data=final_merged_data)
plt.title('2013 House Prices')
plt.ylabel('House Price')
plt.grid()

# Boxplot for 'Equivalent household income <$600/week, %'
plt.subplot(1, 3, 2)
sns.boxplot(y='Equivalent household income <$600/week, %', data=final_merged_data)
plt.title('Equivalent Household Income < $600/week (%)')
plt.ylabel('Percentage (%)')
plt.grid()

# Boxplot for 'Holds degree or higher, %'
plt.subplot(1, 3, 3)
sns.boxplot(y='Holds degree or higher, %', data=final_merged_data)
plt.title('Holds Degree or Higher (%)')
plt.ylabel('Percentage (%)')
plt.grid()

# Boxplot
plt.show()

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

final_merged_data['2013'] = pd.to_numeric(final_merged_data['2013'], errors='coerce')
final_merged_data['Equivalent household income <$600/week, %'] = pd.to_numeric(final_merged_data['Equivalent household income <$600/week, %'], errors='coerce')
final_merged_data['Holds degree or higher, %'] = pd.to_numeric(final_merged_data['Holds degree or higher, %'], errors='coerce')

plt.figure(figsize=(18, 5))

# Scatter plot for '2013' vs 'Equivalent household income <$600/week, %'
plt.subplot(1, 3, 1)
sns.scatterplot(x='Equivalent household income <$600/week, %', y='2013', data=final_merged_data)
plt.title('Scatter Plot: 2013 House Prices vs Income < $600/week (%)')
plt.xlabel('Equivalent Household Income < $600/week (%)')
plt.ylabel('2013 House Prices')
plt.grid()

# Scatter plot for '2013' vs 'Holds degree or higher, %'
plt.subplot(1, 3, 2)
sns.scatterplot(x='Holds degree or higher, %', y='2013', data=final_merged_data)
plt.title('Scatter Plot: 2013 House Prices vs Holds Degree or Higher (%)')
plt.xlabel('Holds Degree or Higher (%)')
plt.ylabel('2013 House Prices')
plt.grid()

# Scatter plot for 'Equivalent household income <$600/week, %' vs 'Holds degree or higher, %'
plt.subplot(1, 3, 3)
sns.scatterplot(x='Holds degree or higher, %', y='Equivalent household income <$600/week, %', data=final_merged_data)
plt.title('Scatter Plot: Income < $600/week (%) vs Holds Degree or Higher (%)')
plt.xlabel('Holds Degree or Higher (%)')
plt.ylabel('Income < $600/week (%)')
plt.grid()

plt.tight_layout()

# Scatterplot
plt.show()

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

final_merged_data['2013'] = pd.to_numeric(final_merged_data['2013'], errors='coerce')
final_merged_data['Equivalent household income <$600/week, %'] = pd.to_numeric(final_merged_data['Equivalent household income <$600/week, %'], errors='coerce')
final_merged_data['Holds degree or higher, %'] = pd.to_numeric(final_merged_data['Holds degree or higher, %'], errors='coerce')

def pearson_r(feature_a, feature_b):
    """
    A function which computes the Pearson Correlation between two features
    """
    # compute the mean
    mean_a = feature_a.mean()
    mean_b = feature_b.mean()
    
    # compute the numerator of pearson r
    numerator = sum((feature_a - mean_a) * (feature_b - mean_b))
    
    # compute the denominator of pearson r
    denominator = np.sqrt(sum((feature_a - mean_a) ** 2) * sum((feature_b - mean_b) ** 2))
    
    return numerator / denominator


corr_price_income = pearson_r(final_merged_data['2013'], final_merged_data['Equivalent household income <$600/week, %'])
corr_price_degree = pearson_r(final_merged_data['2013'], final_merged_data['Holds degree or higher, %'])
corr_income_degree = pearson_r(final_merged_data['Equivalent household income <$600/week, %'], final_merged_data['Holds degree or higher, %'])

print(f"Pearson Correlation Coefficient between house price and 'Equivalent household income <$600/week, %': {corr_price_income:.4f}")
print(f"Pearson Correlation Coefficient between house price and 'Holds degree or higher, %': {corr_price_degree:.4f}")
print(f"Pearson Correlation Coefficient between 'Equivalent household income <$600/week, %' and 'Holds degree or higher, %': {corr_income_degree:.4f}")
